@page "/Devices/Delete/{DeviceId:guid}"

@using DataAccessLibrary
@using DataAccessLibrary.Models
@using DataAccessLibrary.Services


@inject IDeviceData _dbDevices
@inject IZoneData _dbZones
@inject ICategoryData _dbCategories
@inject NavigationManager NavigationManager

<h1>Delete Device</h1>
<hr />

<h3>Are you sure you want to delete this?</h3>
@if(device is null)
{
    <LoadingTemplate> 
		<span class="spinner-grow spinner-grow-sm" role="status" aria-hidden="true"></span>
		Loading...        
	</LoadingTemplate>
}
else
{
    <div>
        <dl class="row">
            <dt class="col-sm-2">
                Device Name
            </dt>
            <dd class="col-sm-10">
                @device.DeviceName
            </dd>
            <dt class="col-sm-2">
                Status
            </dt>
            <dd class="col-sm-10">
                @device.Status
            </dd>
            <dt class="col-sm-2">
                Is Active
            </dt>
            <dd class="col-sm-10">
                @device.IsActive
            </dd>
            <dt class="col-sm-2">
                Date Created
            </dt>
            <dd class="col-sm-10">
                @device.DateCreated
            </dd>
            <dt class="col-sm-2">
                Category
            </dt>
            <dd class="col-sm-10">
                @category.CategoryName
            </dd>
            <dt class="col-sm-2">
                Zone
            </dt>
            <dd class="col-sm-10">
                @zone.ZoneName
            </dd>
        </dl>
    </div>
    <div>
        <Button class="btn btn-outline-dark" @onclick="OnClickDelete"> Delete Device </Button>
        <Button class="btn btn-outline-dark" @onclick="OnClickEdit"> Edit Device </Button>
        <Button class="btn btn-outline-dark" @onclick="OnClickList"> Back to List </Button>
    </div>
}

@code {
    [Parameter]
    public Guid DeviceId { get; set; }
    private DeviceModel device;
    private ZoneModel zone;
    private CategoryModel category;
    protected override async Task OnInitializedAsync()
    {
        device = await _dbDevices.GetDeviceById(DeviceId);
        zone = await _dbZones.GetZoneById(device.ZoneID);
        category = await _dbCategories.GetCategoryById(device.CategoryID);
    }
    protected void OnClickEdit(EventArgs args) 
    {
        NavigationManager.NavigateTo("/Devices/Edit/" + DeviceId);
    }
    protected void OnClickList(EventArgs args)
    {
        NavigationManager.NavigateTo("/Devices/Index");
    }
    protected void OnClickDelete(EventArgs args)
    {
        _dbDevices.DeleteDevice(DeviceId);
        NavigationManager.NavigateTo("/Devices/Index");
    }
}